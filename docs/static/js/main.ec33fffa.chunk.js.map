{"version":3,"sources":["components/AddCategory.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifExpertApp","defaultCategories","categories","map","category","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAGVC,mBAAS,IAHC,mBAGvCC,EAHuC,KAG3BC,EAH2B,KAkB9C,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAMlB,+BAAKD,EAAL,KACI,2BACIQ,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YCLlBG,G,UAAe,SAAC,GAAwC,IAAD,IAAtCC,yBAAsC,MAAlB,CAAC,YAAiB,IAG5Bd,mBAASc,GAHmB,mBAGzDC,EAHyD,KAG7ChB,EAH6C,KAKhE,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEQgB,EAAWC,KAAI,SAAAC,W,MCTnCC,IAASC,OAEP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.ec33fffa.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    // input valor y estado\n    const [inputValue, setInputValue] = useState(''); // Iniciamo el estado a '', para evitar errores de undefined\n\n    const handleInputChange = (e) => { \n        setInputValue(e.target.value); // extraemos el valor que se escribió\n    }\n\n    // al pulsar enter, lanzaremos el submit\n    const handleSubmit = (e) => {\n        e.preventDefault(); // para evitar que se refresque toda la pantalla con el submit del formulario\n        if (inputValue.trim().length > 2) { // pequeña validacion para que no se lance vacio o con una sola letra\n            setCategories(cats => [inputValue, ...cats,]); // añadimos a categorias el input en la primera posicion\n            setInputValue(''); // limpiamos el input\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}> \n        <p> {inputValue} </p>\n            <input\n                type=\"text\"\n                value={inputValue} // ultimo valor que se escribió\n                onChange={handleInputChange} // se disparará cada vez que la caja de texto cambie\n            />\n        </form>\n    )\n}\n\n// obligamos a que siempre se nos pase setCategories\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = ({defaultCategories = ['Avengers']}) => { // así podemos poner un estado inicial por defecto\n\n    // usamos el hook useState\n    const [categories, setCategories] = useState(defaultCategories);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n            <ol>\n                {\n                    categories.map(category => ( // usamos map para iterar los elementos, aqui un for no funcionará\n                        <GifGrid\n                            key={category} // Cada elemento debe tener una key unica, para que React sepa el elemento que está iterando\n                            category={category}\n                        />\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  // <React.StrictMode> hará que React sea más estricto, como estamos aprendiendo lo quitamos de momento\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}